<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\node\Entity\Node;
use Drupal\user\Entity\User;
use Drupal\node\NodeInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\views\Views;
use Drupal\Core\Cache\Cache;

/**
* Implements hook_mail().
*/
function student_hosting_mail($key, &$message, $params) {
  switch ($key) {
    case 'application_submitted':
      $message['from'] = \Drupal::config('system.site')->get('mail');
      $message['subject'] = $params['applicant_name'] . ' submitted an application for your ' . $params['program_title'];
      $message['body'][] = $params['applicant_name'] . ' has submitted an application for your ' . $params['program_title'] . '.'
        . ' Follow this link to view the application: http://slinkonline.com/node/' . $params['application_nid'];
      break;
  }
}

/**
 * Implements hook_node_access().
 */
function student_hosting_node_access(NodeInterface $node, $op, AccountInterface $account) {
  // Applications can only be accessed by their author and the school admin recipient.
  if ($node->gettype() == 'student_hosting_application') {
    $is_author= $account->id() == $node->getOwner()->id();
    $is_school_admin = $account->id() == $node->get('field_recipient_school')->entity->getOwner()->id();
    if (!$is_author && !$is_school_admin) {
      return AccessResult::forbidden()->cachePerPermissions(); 
    }
  }
  return AccessResult::neutral()->cachePerPermissions();
}

/**
 * Implements hook_entity_view().
 */
function student_hosting_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  // when an application is viewed, mark it as read
  if ($entity->bundle() == 'student_hosting_application' && $view_mode == 'full' && !$entity->field_read->value) {
    $entity->set('field_read', TRUE);
    $entity->save();
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function student_hosting_preprocess_menu(&$vars) {
  // disable caching the school admin menu so it can show the current number of unread applications
  if ($vars['menu_name'] == 'school-admin') {
    $vars['#cache']['max-age'] = 0; 
  }
}

/**
 * Implements hook_link_alter().
 */
function student_hosting_link_alter(&$variables) {
  // on Applications menu item, show number of unread applications in parentheses
  if ($variables['text'] == 'Applications') {
    $current_user = User::load(Drupal::currentUser()->id());
    $school = $current_user->field_school->entity;
    $application_nids = \Drupal::entityQuery('node')
      ->condition('type', 'student_hosting_application')
      ->condition('field_read', FALSE)
      ->condition('field_recipient_school.entity.nid', $school != NULL ? $school->id() : 0)
      ->execute();
    $count = count($application_nids);
    if ($count > 0) {
      $variables['text'] = $variables['text'] . ' (' . $count . ')'; 
    }
  }
}

/**
 * Implements hook_theme().
 */
function student_hosting_theme() {
  return [
    'student_hosting_formatter' => [
      'variables' => [
        'use_container' => FALSE,
        'use_apply_button' => FALSE,
        'field_name' => NULL,
        'title' => NULL,
        'cost' => 0,
        'currency' => NULL,
        'min_age' => 0,
        'min_years_enrolled' => 0,
        'has_eligibility_requirements' => FALSE,
        'program_parameters' => NULL,
        'expectations' => NULL,
        'has_expectations' => FALSE,
        'school_name' => NULL,
        'school_node_id' => 0,
        'require_jc_record' => FALSE,
        'require_sm_approval' => FALSE,
        'require_recommendation_letter' => FALSE,
        'has_required_documents' => FALSE,
        'jc_record_document_description' => NULL,
        'sm_approval_document_description' => NULL,
        'recommendation_letter_document_description' => NULL
      ],
      'template' => 'student_hosting_formatter',
    ],
  ];
}
